# Generated by Django 3.1.5 on 2021-05-01 01:15

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('photo', models.ImageField(blank=True, upload_to='static')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('binname', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Bottle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.CharField(blank=True, max_length=6, null=True)),
                ('lwin', models.CharField(blank=True, max_length=7, null=True)),
                ('display_name', models.CharField(max_length=256)),
                ('producer_title', models.CharField(blank=True, max_length=64, null=True)),
                ('producer_name', models.CharField(blank=True, max_length=64, null=True)),
                ('country', models.CharField(blank=True, max_length=64, null=True)),
                ('region', models.CharField(blank=True, max_length=64, null=True)),
                ('sub_region', models.CharField(blank=True, max_length=64, null=True)),
                ('colour', models.CharField(blank=True, max_length=16, null=True)),
                ('vintage', models.CharField(max_length=4)),
                ('size', models.CharField(max_length=8)),
                ('store', models.CharField(blank=True, max_length=64, null=True)),
                ('cost', models.IntegerField(blank=True, default=0, null=True)),
                ('note', models.CharField(blank=True, max_length=128, null=True)),
                ('consumed', models.BooleanField(default=False)),
                ('favorite', models.BooleanField(default=False)),
                ('lwin11', models.CharField(blank=True, max_length=11, null=True)),
                ('date_added', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('bin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.bin')),
            ],
        ),
        migrations.CreateModel(
            name='Lwin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lwin', models.CharField(max_length=7)),
                ('display_name', models.CharField(max_length=256)),
                ('producer_title', models.CharField(max_length=64)),
                ('producer_name', models.CharField(max_length=64)),
                ('wine', models.CharField(max_length=64)),
                ('country', models.CharField(max_length=64)),
                ('region', models.CharField(max_length=64)),
                ('sub_region', models.CharField(max_length=64)),
                ('site', models.CharField(max_length=64)),
                ('parcel', models.CharField(max_length=64)),
                ('colour', models.CharField(max_length=16)),
                ('type', models.CharField(max_length=64)),
                ('sub_type', models.CharField(max_length=64)),
                ('designation', models.CharField(max_length=16)),
                ('classification', models.CharField(max_length=64)),
                ('vintage_config', models.CharField(max_length=16)),
                ('first_vintage', models.CharField(max_length=4)),
                ('final_vintage', models.CharField(max_length=4)),
                ('reference', models.CharField(max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_tasted', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('lwin_lwin', models.CharField(blank=True, max_length=7, null=True)),
                ('lwin_vintage', models.CharField(blank=True, max_length=4, null=True)),
                ('is_public', models.BooleanField(default=True)),
                ('like_status', models.CharField(default='like', max_length=64)),
                ('score', models.CharField(blank=True, max_length=3, null=True)),
                ('tasting_note', models.CharField(blank=True, max_length=512, null=True)),
                ('bottle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.bottle')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Consumption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_consumed', models.DateField(default=django.utils.timezone.now)),
                ('reason', models.CharField(max_length=64)),
                ('private_note', models.CharField(blank=True, max_length=64, null=True)),
                ('gathered', models.IntegerField(blank=True, default=0, null=True)),
                ('permanently_deleted', models.BooleanField(default=False)),
                ('has_review', models.BooleanField(default=False)),
                ('bottle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.bottle')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cellar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cellarname', models.CharField(max_length=64, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='bottle',
            name='cellar',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.cellar'),
        ),
        migrations.AddField(
            model_name='bottle',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bin',
            name='cellar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.cellar'),
        ),
        migrations.AddField(
            model_name='bin',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
